/****************************************************************************
**
** Copyright (C) 2010 Agile Genomics, LLC
** All rights reserved.
** Primary author: Luke Ulrich
**
****************************************************************************/

#ifndef MPTTTREECONVERTER_H
#define MPTTTREECONVERTER_H

#include <QtCore/QVector>

// ------------------------------------------------------------------------------------------------
// Forward declarations
template<typename T>
struct MpttNode;

template<typename T>
class TreeNode;

/**
  * MpttTreeConverter provides a purely static interface for converting between an in-memory TreeNode
  * tree representation and its MPTT-encoded equivalent representation.
  *
  * These methods do not require any private data, so they are all defined statically.
  */
template<typename T>
class MpttTreeConverter
{
public:
    // ------------------------------------------------------------------------------------------------
    // Public static methods
    //! Returns an equivalent representation of treeNode and its descendants as an Mptt node array
    static QVector<MpttNode<T> > toMpttVector(TreeNode<T> *treeNode);

    //! Static function for transforming a set of MpttNodes into a tree structure. Returns the root node on success or mullptr otherwise
    static TreeNode<T> *fromMpttVector(QVector<MpttNode<T> > &mpttNodeVector);

private:
    // ------------------------------------------------------------------------------------------------
    // Private methods
    //! Recursive function that does pre-order tree traversal beginning with node and adding adding new nodes mpttNodeVector. Returns the rightmost value of the last MPTT node.
    static int recurseBuildMpttVector(TreeNode<T> *node, int left, QVector<MpttNode<T> > &mpttNodeVector);

    //! Internal function for use with sorting a QVector<MpttNode> by the left values in ascending order
    static bool sortMpttLeftLessThan(const MpttNode<T> &a, const MpttNode<T> &b);

    //!< Internal function for validating a MPTT tree
    static void validateMpttVector(const QVector<MpttNode<T> > &mpttNodeVector);
};

#include "MpttTreeConverter.cpp"

#endif // MPTTTREECONVERTER_H
